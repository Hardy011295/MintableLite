{
  "openapi": "3.0.0",
  "components": {
    "schemas": {
      "SuccessResponse": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidationErrorResponse": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DefaultResponse": {
        "properties": {},
        "type": "object"
      },
      "AssetWithOrders": {
        "properties": {
          "collection": {
            "type": "object"
          },
          "created_at": {
            "description": "Timestamp of when the asset was created",
            "type": "string"
          },
          "description": {
            "description": "Description of this asset",
            "type": "string"
          },
          "fees": {
            "description": "Royalties to pay on this asset operations",
            "type": "object"
          },
          "id": {
            "description": "[DEPRECATED] Internal Immutable X Token ID",
            "type": "string"
          },
          "image_url": {
            "description": "URL of the image which should be used for this asset",
            "type": "string"
          },
          "metadata": {
            "description": "Metadata of this asset",
            "type": "object"
          },
          "name": {
            "description": "Name of this asset",
            "type": "string"
          },
          "orders": {
            "type": "object"
          },
          "status": {
            "description": "Status of this asset (where it is in the system)",
            "type": "string"
          },
          "token_address": {
            "description": "Address of the ERC721 contract",
            "type": "string"
          },
          "token_id": {
            "description": "ERC721 Token ID of this asset",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp of when the asset was updated",
            "type": "string"
          },
          "uri": {
            "description": "URI to access this asset externally to Immutable X",
            "type": "string"
          },
          "user": {
            "description": "Ethereum address of the user who owns this asset",
            "type": "string"
          }
        },
        "required": [
          "collection",
          "created_at",
          "description",
          "image_url",
          "metadata",
          "name",
          "status",
          "token_address",
          "token_id",
          "updated_at",
          "uri",
          "user"
        ],
        "type": "object"
      },
      "ImxInventoryResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "collection": {
                  "type": "object"
                },
                "created_at": {
                  "description": "Timestamp of when the asset was created",
                  "type": "string"
                },
                "description": {
                  "description": "Description of this asset",
                  "type": "string"
                },
                "fees": {
                  "description": "Royalties to pay on this asset operations",
                  "type": "object"
                },
                "id": {
                  "description": "[DEPRECATED] Internal Immutable X Token ID",
                  "type": "string"
                },
                "image_url": {
                  "description": "URL of the image which should be used for this asset",
                  "type": "string"
                },
                "metadata": {
                  "description": "Metadata of this asset",
                  "type": "object"
                },
                "name": {
                  "description": "Name of this asset",
                  "type": "string"
                },
                "orders": {
                  "type": "object"
                },
                "status": {
                  "description": "Status of this asset (where it is in the system)",
                  "type": "string"
                },
                "token_address": {
                  "description": "Address of the ERC721 contract",
                  "type": "string"
                },
                "token_id": {
                  "description": "ERC721 Token ID of this asset",
                  "type": "string"
                },
                "updated_at": {
                  "description": "Timestamp of when the asset was updated",
                  "type": "string"
                },
                "uri": {
                  "description": "URI to access this asset externally to Immutable X",
                  "type": "string"
                },
                "user": {
                  "description": "Ethereum address of the user who owns this asset",
                  "type": "string"
                }
              },
              "required": [
                "collection",
                "created_at",
                "description",
                "image_url",
                "metadata",
                "name",
                "status",
                "token_address",
                "token_id",
                "updated_at",
                "uri",
                "user"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "meta": {
            "properties": {
              "cursor": {
                "type": "string"
              },
              "remaining": {
                "type": "number"
              }
            },
            "required": [
              "cursor",
              "remaining"
            ],
            "type": "object"
          }
        },
        "required": [
          "data",
          "meta"
        ],
        "type": "object"
      },
      "AuthorizeRequest": {
        "type": "object",
        "properties": {
          "contract_address": {
            "type": "string"
          },
          "token_id": {
            "type": "string"
          },
          "wallet_address": {
            "type": "string"
          }
        },
        "required": [
          "wallet_address"
        ]
      },
      "AuthorizeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "authorized": {
                "type": "boolean"
              }
            },
            "required": [
              "authorized"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "AuthorizeInventoryRequest": {
        "type": "object",
        "properties": {
          "wallet_address": {
            "type": "string"
          },
          "contract_address": {
            "type": "string"
          }
        },
        "required": [
          "wallet_address"
        ]
      },
      "AuthorizeInventoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              }
            },
            "required": [
              "count"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "CustodialWalletCreateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "CustodialWalletCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "wallet_address": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "username"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "CustodialWalletRemoveRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "last_eight_digits_privatekey_hash": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "last_eight_digits_privatekey_hash"
        ]
      },
      "CustodialWalletRemoveResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "CustodialWalletExportRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "CustodialWalletExportResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string"
              }
            },
            "required": [
              "request_id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "CustodialWalletExportApprovalRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "username",
          "request_id"
        ]
      },
      "CustodialWalletExportApprovalResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "encode": {
                "type": "string"
              },
              "private_key": {
                "type": "string"
              },
              "encrypt_iv": {
                "type": "string"
              }
            },
            "required": [
              "private_key"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "ImxRegisterRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "private_key": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email"
        ]
      },
      "ImxRegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "wallet_address": {
                "type": "string"
              }
            },
            "required": [
              "username",
              "wallet_address"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "ImxMintRequest": {
        "type": "object",
        "properties": {
          "to_username": {
            "type": "string"
          },
          "token_id": {
            "type": "number"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "animation_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "trait_type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "trait_type",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "image"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "to_username",
          "token_id"
        ]
      },
      "ImxMintResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "transaction_id": {
                "type": "number"
              }
            },
            "required": [
              "transaction_id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "ImxInventoryRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "page_size": {
            "type": "number"
          },
          "cursor": {
            "type": "string"
          },
          "order_by": {
            "type": "string",
            "enum": [
              "updated_at",
              "name"
            ]
          },
          "direction": {
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "ImxTransferRequest": {
        "type": "object",
        "properties": {
          "from_username": {
            "type": "string"
          },
          "to_username": {
            "type": "string"
          },
          "token_id": {
            "type": "string"
          }
        },
        "required": [
          "from_username",
          "to_username",
          "token_id"
        ]
      },
      "ImxTransferResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "transfer_id": {
                "type": "number"
              }
            },
            "required": [
              "transfer_id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "MetaInfoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "used_quantity": {
                "type": "number"
              },
              "contract_address": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "used_quantity",
              "contract_address"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "MetadataUpdateRequest": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "animation_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "trait_type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "trait_type",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "image"
            ],
            "additionalProperties": false
          }
        }
      },
      "MetadataUpdateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "PreMintListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "animation_url": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "trait_type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "trait_type",
                          "value"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "title": {
                      "type": "string"
                    },
                    "subtitle": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image"
                  ],
                  "additionalProperties": false
                },
                "project_id": {
                  "type": "string"
                },
                "premint_id": {
                  "type": "string"
                },
                "pk": {
                  "type": "string"
                },
                "sk": {
                  "type": "string"
                }
              },
              "required": [
                "metadata",
                "pk",
                "premint_id",
                "project_id",
                "quantity",
                "sk"
              ],
              "additionalProperties": false
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "last_evaluated_key": {
                "type": "string"
              }
            },
            "required": [
              "count"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "PreMintsCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "animation_url": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "trait_type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "trait_type",
                        "value"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "title": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "image"
                ],
                "additionalProperties": false
              },
              "project_id": {
                "type": "string"
              },
              "premint_id": {
                "type": "string"
              },
              "pk": {
                "type": "string"
              },
              "sk": {
                "type": "string"
              }
            },
            "required": [
              "metadata",
              "pk",
              "premint_id",
              "project_id",
              "quantity",
              "sk"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "PreMintsCreateRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "animation_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "trait_type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "trait_type",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "image"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "quantity",
          "metadata"
        ]
      },
      "PreMintsShowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "number"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "animation_url": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "trait_type": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "trait_type",
                        "value"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "title": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "image"
                ],
                "additionalProperties": false
              },
              "project_id": {
                "type": "string"
              },
              "premint_id": {
                "type": "string"
              },
              "pk": {
                "type": "string"
              },
              "sk": {
                "type": "string"
              }
            },
            "required": [
              "metadata",
              "pk",
              "premint_id",
              "project_id",
              "quantity",
              "sk"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "PreMintsRemoveResponse": {
        "type": "object"
      },
      "PreMintsUpdateRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "animation_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "trait_type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "trait_type",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "image"
            ],
            "additionalProperties": false
          },
          "project_id": {
            "type": "string"
          },
          "premint_id": {
            "type": "string"
          }
        },
        "required": [
          "metadata",
          "premint_id",
          "project_id",
          "quantity"
        ]
      },
      "PreMintsUpdateResponse": {
        "type": "object"
      },
      "PreMintsImportResponse": {
        "type": "object"
      },
      "PreMintsImportRequest": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "animation_url": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "trait_type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "trait_type",
                          "value"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "title": {
                      "type": "string"
                    },
                    "subtitle": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "quantity",
                "metadata"
              ],
              "additionalProperties": false
            }
          }
        }
      },
      "MintRequest": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "animation_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "trait_type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "trait_type",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "image"
            ],
            "additionalProperties": false
          },
          "wallet_address": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "wallet_address"
        ]
      },
      "MintResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "token_id": {
                "type": "string"
              }
            },
            "required": [
              "token_id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "ClaimRequest": {
        "type": "object",
        "properties": {
          "redemption_code": {
            "type": "string"
          },
          "wallet_address": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "animation_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "trait_type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "trait_type",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "image"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "wallet_address"
        ]
      },
      "ClaimResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "token_id": {
                "type": "string"
              }
            },
            "required": [
              "token_id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "ProjectsListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "domain": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "mint_limit_per_address": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "contract_type": {
                  "type": "string",
                  "enum": [
                    "Shared",
                    "Dedicated",
                    "Existing"
                  ]
                },
                "wallet_type": {
                  "type": "string",
                  "enum": [
                    "Both",
                    "Custodial",
                    "NonCustodial"
                  ]
                },
                "base_uri": {
                  "type": "string"
                },
                "contract_name": {
                  "type": "string"
                },
                "symbol": {
                  "type": "string"
                },
                "royalty": {
                  "type": "number"
                },
                "contract_address": {
                  "type": "string"
                },
                "owner_address": {
                  "type": "string"
                },
                "network": {
                  "type": "number",
                  "enum": [
                    1,
                    3,
                    4,
                    5,
                    137,
                    80001
                  ]
                },
                "chain": {
                  "type": "string",
                  "enum": [
                    "eth",
                    "imx"
                  ]
                },
                "app_id": {
                  "type": "string"
                },
                "api_key": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Draft",
                    "Disabled",
                    "Failed",
                    "Published",
                    "Suspended",
                    "Deploying"
                  ]
                },
                "project_id": {
                  "type": "string"
                },
                "used_quantity": {
                  "type": "number"
                },
                "organization_id": {
                  "type": "string"
                },
                "pk": {
                  "type": "string"
                },
                "sk": {
                  "type": "string"
                },
                "api_key_pk": {
                  "type": "string"
                },
                "api_key_sk": {
                  "type": "string"
                },
                "contract_address_pk": {
                  "type": "string"
                },
                "contract_address_sk": {
                  "type": "string"
                },
                "domain_pk": {
                  "type": "string"
                },
                "domain_sk": {
                  "type": "string"
                },
                "organization_pk": {
                  "type": "string"
                },
                "organization_sk": {
                  "type": "string"
                }
              },
              "required": [
                "api_key",
                "api_key_pk",
                "api_key_sk",
                "chain",
                "contract_address_pk",
                "contract_address_sk",
                "contract_name",
                "contract_type",
                "created_at",
                "description",
                "domain",
                "domain_pk",
                "domain_sk",
                "name",
                "network",
                "organization_id",
                "organization_pk",
                "organization_sk",
                "pk",
                "project_id",
                "sk",
                "status",
                "updated_at",
                "wallet_type"
              ],
              "additionalProperties": false
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "last_evaluated_key": {
                "type": "string"
              }
            },
            "required": [
              "count"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "ProjectsCreateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "mint_limit_per_address": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "contract_type": {
            "type": "string",
            "enum": [
              "Shared",
              "Dedicated",
              "Existing"
            ]
          },
          "wallet_type": {
            "type": "string",
            "enum": [
              "Both",
              "Custodial",
              "NonCustodial"
            ]
          },
          "base_uri": {
            "type": "string"
          },
          "contract_name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "royalty": {
            "type": "number"
          },
          "contract_address": {
            "type": "string"
          },
          "owner_address": {
            "type": "string"
          },
          "chain": {
            "type": "string",
            "enum": [
              "eth",
              "imx"
            ]
          }
        },
        "required": [
          "description",
          "name",
          "contract_type",
          "wallet_type",
          "contract_name",
          "chain"
        ]
      },
      "ProjectsCreateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "mint_limit_per_address": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "contract_type": {
                "type": "string",
                "enum": [
                  "Shared",
                  "Dedicated",
                  "Existing"
                ]
              },
              "wallet_type": {
                "type": "string",
                "enum": [
                  "Both",
                  "Custodial",
                  "NonCustodial"
                ]
              },
              "base_uri": {
                "type": "string"
              },
              "contract_name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "royalty": {
                "type": "number"
              },
              "contract_address": {
                "type": "string"
              },
              "owner_address": {
                "type": "string"
              },
              "network": {
                "type": "number",
                "enum": [
                  1,
                  3,
                  4,
                  5,
                  137,
                  80001
                ]
              },
              "chain": {
                "type": "string",
                "enum": [
                  "eth",
                  "imx"
                ]
              },
              "app_id": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "Draft",
                  "Disabled",
                  "Failed",
                  "Published",
                  "Suspended",
                  "Deploying"
                ]
              },
              "project_id": {
                "type": "string"
              },
              "used_quantity": {
                "type": "number"
              },
              "organization_id": {
                "type": "string"
              },
              "pk": {
                "type": "string"
              },
              "sk": {
                "type": "string"
              },
              "api_key_pk": {
                "type": "string"
              },
              "api_key_sk": {
                "type": "string"
              },
              "contract_address_pk": {
                "type": "string"
              },
              "contract_address_sk": {
                "type": "string"
              },
              "domain_pk": {
                "type": "string"
              },
              "domain_sk": {
                "type": "string"
              },
              "organization_pk": {
                "type": "string"
              },
              "organization_sk": {
                "type": "string"
              }
            },
            "required": [
              "api_key",
              "api_key_pk",
              "api_key_sk",
              "chain",
              "contract_address_pk",
              "contract_address_sk",
              "contract_name",
              "contract_type",
              "created_at",
              "description",
              "domain",
              "domain_pk",
              "domain_sk",
              "name",
              "network",
              "organization_id",
              "organization_pk",
              "organization_sk",
              "pk",
              "project_id",
              "sk",
              "status",
              "updated_at",
              "wallet_type"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "ProjectsShowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "mint_limit_per_address": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "contract_type": {
                "type": "string",
                "enum": [
                  "Shared",
                  "Dedicated",
                  "Existing"
                ]
              },
              "wallet_type": {
                "type": "string",
                "enum": [
                  "Both",
                  "Custodial",
                  "NonCustodial"
                ]
              },
              "base_uri": {
                "type": "string"
              },
              "contract_name": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "royalty": {
                "type": "number"
              },
              "contract_address": {
                "type": "string"
              },
              "owner_address": {
                "type": "string"
              },
              "network": {
                "type": "number",
                "enum": [
                  1,
                  3,
                  4,
                  5,
                  137,
                  80001
                ]
              },
              "chain": {
                "type": "string",
                "enum": [
                  "eth",
                  "imx"
                ]
              },
              "app_id": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "Draft",
                  "Disabled",
                  "Failed",
                  "Published",
                  "Suspended",
                  "Deploying"
                ]
              },
              "project_id": {
                "type": "string"
              },
              "used_quantity": {
                "type": "number"
              },
              "organization_id": {
                "type": "string"
              },
              "pk": {
                "type": "string"
              },
              "sk": {
                "type": "string"
              },
              "api_key_pk": {
                "type": "string"
              },
              "api_key_sk": {
                "type": "string"
              },
              "contract_address_pk": {
                "type": "string"
              },
              "contract_address_sk": {
                "type": "string"
              },
              "domain_pk": {
                "type": "string"
              },
              "domain_sk": {
                "type": "string"
              },
              "organization_pk": {
                "type": "string"
              },
              "organization_sk": {
                "type": "string"
              },
              "claim": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "use_code": {
                    "type": "boolean"
                  },
                  "encrypted": {
                    "type": "boolean"
                  },
                  "button_size": {
                    "type": "string"
                  },
                  "button_name": {
                    "type": "string"
                  },
                  "email_entry": {
                    "type": "string"
                  },
                  "button_color": {
                    "type": "string"
                  },
                  "button_shadow": {
                    "type": "string"
                  },
                  "border_radius": {
                    "type": "string"
                  },
                  "background_color": {
                    "type": "string"
                  },
                  "terms_conditions": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "pk": {
                    "type": "string"
                  },
                  "sk": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "enabled",
                  "pk",
                  "project_id",
                  "sk",
                  "updated_at"
                ],
                "additionalProperties": false
              },
              "generative": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "type": "string"
                  },
                  "total_images": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Draft",
                      "Generated",
                      "Generating"
                    ]
                  },
                  "layers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "frequency": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "percentage": {
                          "type": "number"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "percentage": {
                                "type": "number"
                              },
                              "url": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "x": {
                                "type": "number"
                              },
                              "y": {
                                "type": "number"
                              },
                              "frequency": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "frequency",
                              "name",
                              "percentage",
                              "url"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "frequency",
                        "name",
                        "percentage",
                        "images"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "pk": {
                    "type": "string"
                  },
                  "sk": {
                    "type": "string"
                  }
                },
                "required": [
                  "layers",
                  "pk",
                  "project_id",
                  "sk",
                  "status",
                  "total_images"
                ],
                "additionalProperties": false
              },
              "marketplace": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "icon": {
                    "type": "string"
                  },
                  "cover": {
                    "type": "string"
                  },
                  "royalty": {
                    "type": "number"
                  },
                  "category": {
                    "type": "string"
                  },
                  "sub_category": {
                    "type": "string"
                  },
                  "external_url": {
                    "type": "string"
                  },
                  "reddit_url": {
                    "type": "string"
                  },
                  "youtube_url": {
                    "type": "string"
                  },
                  "twitter_url": {
                    "type": "string"
                  },
                  "instagram_url": {
                    "type": "string"
                  },
                  "contract_address": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "pk": {
                    "type": "string"
                  },
                  "sk": {
                    "type": "string"
                  }
                },
                "required": [
                  "contract_address",
                  "created_at",
                  "name",
                  "pk",
                  "project_id",
                  "sk",
                  "updated_at"
                ],
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "required": [
              "api_key",
              "api_key_pk",
              "api_key_sk",
              "chain",
              "contract_address_pk",
              "contract_address_sk",
              "contract_name",
              "contract_type",
              "created_at",
              "description",
              "domain",
              "domain_pk",
              "domain_sk",
              "name",
              "network",
              "organization_id",
              "organization_pk",
              "organization_sk",
              "pk",
              "project_id",
              "sk",
              "status",
              "updated_at",
              "wallet_type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProjectsUpdateRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mint_limit_per_address": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "contract_type": {
            "type": "string",
            "enum": [
              "Shared",
              "Dedicated",
              "Existing"
            ]
          },
          "wallet_type": {
            "type": "string",
            "enum": [
              "Both",
              "Custodial",
              "NonCustodial"
            ]
          },
          "base_uri": {
            "type": "string"
          },
          "contract_name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "royalty": {
            "type": "number"
          },
          "contract_address": {
            "type": "string"
          },
          "owner_address": {
            "type": "string"
          },
          "network": {
            "type": "number",
            "enum": [
              1,
              3,
              4,
              5,
              137,
              80001
            ]
          },
          "chain": {
            "type": "string",
            "enum": [
              "eth",
              "imx"
            ]
          }
        },
        "required": [
          "domain",
          "description",
          "name",
          "contract_type",
          "wallet_type",
          "contract_name",
          "network",
          "chain"
        ]
      }
    },
    "securitySchemes": {
      "MintologyBearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "MintableBearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "APIKey": {
        "type": "apiKey",
        "in": "header",
        "name": "API-Key"
      }
    }
  },
  "info": {
    "title": "Mintology API",
    "description": "Mintology API Description",
    "version": "v1.0.0"
  },
  "paths": {
    "/{projectId}/authorize": {
      "post": {
        "operationId": "authorize",
        "summary": "Authorize",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> This endpoint is used to check if a user owns a particular token (or any token of a particular collection). You will need to authenticate using your Mintology Key, and also the API Key that you set for one of your projects. If you do not specify a contract_address, we will use the contract associated with your project. If you do not specify a token_id, we will check if the wallet contain any token from the contract. ",
        "tags": [
          "Authorize"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contract_address": {
                    "type": "string"
                  },
                  "token_id": {
                    "type": "string"
                  },
                  "wallet_address": {
                    "type": "string"
                  }
                },
                "required": [
                  "wallet_address"
                ]
              }
            }
          },
          "description": "Authorize NFT Request Schema"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully verified address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "authorized": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "authorized"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}/authorize/inventory": {
      "post": {
        "operationId": "authorize-inventory",
        "summary": "Inventory",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> This endpoint is used to get the list of tokens that a user owns from a particular collection. You will need to authenticate using your Mintology Key, and also the API Key that you set for one of your projects. If you do not specify a contract_address, we will use the contract associated with your project. ",
        "tags": [
          "Authorize"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wallet_address": {
                    "type": "string"
                  },
                  "contract_address": {
                    "type": "string"
                  }
                },
                "required": [
                  "wallet_address"
                ]
              }
            }
          },
          "description": "Authorize Inventory NFT Request Schema"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully verified address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/custodial-wallets": {
      "post": {
        "operationId": "custodial-wallets-create",
        "summary": "Create",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> Create a new Custodial Wallet. This also creates a Mintable account, so users have the ability to claim custody of their private keys. Please note that a username can be provided: if you do not provide a username, a random one will be generated and the user will be able to modify it from the <a href='https://mintable.com'>Mintable</a> website. This is a display name used on the site to reference the user, since the email address is confidential.<br/><br/> This endpoint should always be called from your backend to prevent any potential spamming or exposing your private API key. ",
        "tags": [
          "Custodial Wallets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          },
          "description": "Create custodial wallet values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully created custodial wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "wallet_address": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "email",
                        "username"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/custodial-wallets/{walletAddress}": {
      "delete": {
        "operationId": "custodial-wallets-remove",
        "summary": "Remove",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> Once a user has taken custody of their Custodial Wallet, this permanently removes the private key from our systems. To ensure the user has indeed received and stored their private key, we require you to send us a hash of the last 8 characters of the key itself: once we have checked it against the actual key and, if the match is successful, we delete the key. The hash function used here is SHA-256 (please see <a href='https://xorbin.com/tools/sha256-hash-calculator'>this example</a>).<br/><br/> This endpoint should always be called from your backend to prevent any potential spamming or exposing your private API key. ",
        "tags": [
          "Custodial Wallets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "last_eight_digits_privatekey_hash": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "last_eight_digits_privatekey_hash"
                ]
              }
            }
          },
          "description": "Remove custodial wallet values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Custodial wallet address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed custodial wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/custodial-wallets/{walletAddress}/exports/request": {
      "post": {
        "operationId": "custodial-wallets-exports-request",
        "summary": "Request To Export",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> When a user wants to take custody of their Custodial Wallet, you can call this endpoint to initiate the process. When you call the endpoint, we will send an email to the user, with an OTP which will have to be provided to access the private key of the wallet. This flow ensures that the request was indeed initiated by the user, since we will be sending this email from our systems. In order to access the private key, both the OTP sent to the user, and the request ID returned by this endpoint will have to be provided.<br/><br/> This endpoint should always be called from your backend to prevent any potential spamming or exposing your private API key. ",
        "tags": [
          "Custodial Wallets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  }
                },
                "required": [
                  "username"
                ]
              }
            }
          },
          "description": "Request to export custodial wallet values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Custodial wallet address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully requested to export custodial wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "request_id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/custodial-wallets/{walletAddress}/exports/approve": {
      "post": {
        "operationId": "custodial-wallets-exports-approve",
        "summary": "Export",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> Export the custodial wallet private key. This endpoint requires the request_id (which you got when calling 'Request to Export Custodial Wallet', and the OTP which was sent to the user by that endpoint (called code here).<br/><br/> This endpoint should always be called from your backend to prevent any potential spamming or exposing your private API key. ",
        "tags": [
          "Custodial Wallets"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "request_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "username",
                  "request_id"
                ]
              }
            }
          },
          "description": "Export custodial wallet approval values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Custodial wallet address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully exported custodial wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "encode": {
                          "type": "string"
                        },
                        "private_key": {
                          "type": "string"
                        },
                        "encrypt_iv": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "private_key"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/imx/register": {
      "post": {
        "operationId": "imx-register",
        "summary": "Register IMX User",
        "description": "Generating an ImmutableX L2 user account for an Ethereum L1 account",
        "tags": [
          "IMX"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "private_key": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "email"
                ]
              }
            }
          },
          "description": "Register IMX user values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully registered IMX user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string"
                        },
                        "wallet_address": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "username",
                        "wallet_address"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/imx/mint": {
      "post": {
        "operationId": "imx-mint",
        "summary": "Mint IMX Item",
        "description": "Minting an NFT refers to the process of creating a unique digital asset on a IMX blockchain, typically using the Ethereum network.",
        "tags": [
          "IMX"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to_username": {
                    "type": "string"
                  },
                  "token_id": {
                    "type": "number"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "animation_url": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "trait_type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "trait_type",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "title": {
                        "type": "string"
                      },
                      "subtitle": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "image"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "to_username",
                  "token_id"
                ]
              }
            }
          },
          "description": "Mint IMX item values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successfully minted IMX item.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction_id": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "transaction_id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/imx/inventory": {
      "post": {
        "operationId": "imx-inventory",
        "summary": "List All Minted Items",
        "description": "View inventory of user at contract address.",
        "tags": [
          "IMX"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "page_size": {
                    "type": "number"
                  },
                  "cursor": {
                    "type": "string"
                  },
                  "order_by": {
                    "type": "string",
                    "enum": [
                      "updated_at",
                      "name"
                    ]
                  },
                  "direction": {
                    "type": "string"
                  }
                },
                "required": [
                  "username"
                ]
              }
            }
          },
          "description": "List IMX items values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully listed IMX minted items.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "collection": {
                            "type": "object"
                          },
                          "created_at": {
                            "description": "Timestamp of when the asset was created",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of this asset",
                            "type": "string"
                          },
                          "fees": {
                            "description": "Royalties to pay on this asset operations",
                            "type": "object"
                          },
                          "id": {
                            "description": "[DEPRECATED] Internal Immutable X Token ID",
                            "type": "string"
                          },
                          "image_url": {
                            "description": "URL of the image which should be used for this asset",
                            "type": "string"
                          },
                          "metadata": {
                            "description": "Metadata of this asset",
                            "type": "object"
                          },
                          "name": {
                            "description": "Name of this asset",
                            "type": "string"
                          },
                          "orders": {
                            "type": "object"
                          },
                          "status": {
                            "description": "Status of this asset (where it is in the system)",
                            "type": "string"
                          },
                          "token_address": {
                            "description": "Address of the ERC721 contract",
                            "type": "string"
                          },
                          "token_id": {
                            "description": "ERC721 Token ID of this asset",
                            "type": "string"
                          },
                          "updated_at": {
                            "description": "Timestamp of when the asset was updated",
                            "type": "string"
                          },
                          "uri": {
                            "description": "URI to access this asset externally to Immutable X",
                            "type": "string"
                          },
                          "user": {
                            "description": "Ethereum address of the user who owns this asset",
                            "type": "string"
                          }
                        },
                        "required": [
                          "collection",
                          "created_at",
                          "description",
                          "image_url",
                          "metadata",
                          "name",
                          "status",
                          "token_address",
                          "token_id",
                          "updated_at",
                          "uri",
                          "user"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "cursor": {
                          "type": "string"
                        },
                        "remaining": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "cursor",
                        "remaining"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/imx/transfer": {
      "post": {
        "operationId": "imx-transfer",
        "summary": "Transfer IMX Item",
        "description": "Transferring an NFT, or a non-fungible token, refers to the process of sending ownership of the digital asset from one address on the IMX blockchain to another.",
        "tags": [
          "IMX"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_username": {
                    "type": "string"
                  },
                  "to_username": {
                    "type": "string"
                  },
                  "token_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "from_username",
                  "to_username",
                  "token_id"
                ]
              }
            }
          },
          "description": "Transfer IMX item values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully transferred IMX item.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "transfer_id": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "transfer_id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}": {
      "get": {
        "operationId": "meta-info",
        "summary": "API",
        "description": "Retrieve API information such as project details and configurations.",
        "tags": [
          "Meta"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved APIs information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "used_quantity": {
                          "type": "number"
                        },
                        "contract_address": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "used_quantity",
                        "contract_address"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}/metadata/{tokenId}": {
      "put": {
        "operationId": "metadata-update",
        "summary": "Update",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> Update token name, image, animation_url and etc... ",
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "animation_url": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "trait_type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "trait_type",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "title": {
                        "type": "string"
                      },
                      "subtitle": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "image"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "description": "Metadata update values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenId",
            "in": "path",
            "description": "Token Identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}/premints": {
      "get": {
        "operationId": "premints-list",
        "summary": "List",
        "description": "Returns a list of premint items. The premints are returned sorted by updated date, with the most recent premints before.",
        "tags": [
          "Premints"
        ],
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "quantity": {
                            "type": "number"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "image": {
                                "type": "string"
                              },
                              "animation_url": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "trait_type": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "trait_type",
                                    "value"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "title": {
                                "type": "string"
                              },
                              "subtitle": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "image"
                            ],
                            "additionalProperties": false
                          },
                          "project_id": {
                            "type": "string"
                          },
                          "premint_id": {
                            "type": "string"
                          },
                          "pk": {
                            "type": "string"
                          },
                          "sk": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "metadata",
                          "pk",
                          "premint_id",
                          "project_id",
                          "quantity",
                          "sk"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "last_evaluated_key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "premints-create",
        "summary": "Create",
        "description": "Create token details like name, image, animation_url and etc...",
        "tags": [
          "Premints"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "number"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "animation_url": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "trait_type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "trait_type",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "title": {
                        "type": "string"
                      },
                      "subtitle": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "image"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "quantity",
                  "metadata"
                ]
              }
            }
          },
          "description": "Create premint values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created premint entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "quantity": {
                          "type": "number"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "animation_url": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "trait_type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "trait_type",
                                  "value"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "title": {
                              "type": "string"
                            },
                            "subtitle": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "image"
                          ],
                          "additionalProperties": false
                        },
                        "project_id": {
                          "type": "string"
                        },
                        "premint_id": {
                          "type": "string"
                        },
                        "pk": {
                          "type": "string"
                        },
                        "sk": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "metadata",
                        "pk",
                        "premint_id",
                        "project_id",
                        "quantity",
                        "sk"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}/premints/{premintId}": {
      "get": {
        "operationId": "premints-show",
        "summary": "Retrieve",
        "description": "Retrieve premint details like name, image, animation_url and etc...",
        "tags": [
          "Premints"
        ],
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "premintId",
            "in": "path",
            "description": "Premint Identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved premint details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "quantity": {
                          "type": "number"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "animation_url": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "trait_type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "trait_type",
                                  "value"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "title": {
                              "type": "string"
                            },
                            "subtitle": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "image"
                          ],
                          "additionalProperties": false
                        },
                        "project_id": {
                          "type": "string"
                        },
                        "premint_id": {
                          "type": "string"
                        },
                        "pk": {
                          "type": "string"
                        },
                        "sk": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "metadata",
                        "pk",
                        "premint_id",
                        "project_id",
                        "quantity",
                        "sk"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "premints-remove",
        "summary": "Remove",
        "description": "Remove premint entity.",
        "tags": [
          "Premints"
        ],
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "premintId",
            "in": "path",
            "description": "Premint Identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed premint details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "premints-update",
        "summary": "Update",
        "description": "Update token details like name, image, animation_url and etc...",
        "tags": [
          "Premints"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "number"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "animation_url": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "trait_type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "trait_type",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "title": {
                        "type": "string"
                      },
                      "subtitle": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "image"
                    ],
                    "additionalProperties": false
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "premint_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "metadata",
                  "premint_id",
                  "project_id",
                  "quantity"
                ]
              }
            }
          },
          "description": "Update premint values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "premintId",
            "in": "path",
            "description": "Premint Identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated premint details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}/premints/import": {
      "post": {
        "operationId": "premints-import",
        "summary": "Import",
        "description": "Import token details like name, image, animation_url and etc...",
        "tags": [
          "Premints"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "quantity": {
                          "type": "number"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "animation_url": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "trait_type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "trait_type",
                                  "value"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "title": {
                              "type": "string"
                            },
                            "subtitle": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "image"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "quantity",
                        "metadata"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          },
          "description": "Import premints values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully imported premints",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}/mint": {
      "post": {
        "operationId": "mint-mint",
        "summary": "Mint",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> <strong>Username</strong> Username used to associate your wallet address with mintable account. you can browse all NFTs associated with your wallet in Mintable profile.  <br/><br/> Mint an NFT to a wallet (custodial or noncustodial). ",
        "tags": [
          "Mint"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "animation_url": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "trait_type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "trait_type",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "title": {
                        "type": "string"
                      },
                      "subtitle": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "image"
                    ],
                    "additionalProperties": false
                  },
                  "wallet_address": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "required": [
                  "wallet_address"
                ]
              }
            }
          },
          "description": "Mint token values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully minted a token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "token_id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "token_id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/{projectId}/claim": {
      "post": {
        "operationId": "mint-claim",
        "summary": "Claim",
        "description": " <strong>IMPORTANT</strong>: Call from the back-end.<br/><br/> <strong>Username</strong> Username used to associate your wallet address with mintable account. you can browse all NFTs associated with your wallet in Mintable profile.  <br/><br/> Mint an NFT to a wallet (custodial or noncustodial). ",
        "tags": [
          "Mint"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "redemption_code": {
                    "type": "string"
                  },
                  "wallet_address": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      },
                      "animation_url": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "trait_type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "trait_type",
                            "value"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "title": {
                        "type": "string"
                      },
                      "subtitle": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "image"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "wallet_address"
                ]
              }
            }
          },
          "description": "Claim token values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully claimed a token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "token_id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "token_id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "operationId": "projects-list",
        "summary": "List",
        "description": "Returns a list of all projects in the system.",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK. Returns a list of all projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "mint_limit_per_address": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "contract_type": {
                            "type": "string",
                            "enum": [
                              "Shared",
                              "Dedicated",
                              "Existing"
                            ]
                          },
                          "wallet_type": {
                            "type": "string",
                            "enum": [
                              "Both",
                              "Custodial",
                              "NonCustodial"
                            ]
                          },
                          "base_uri": {
                            "type": "string"
                          },
                          "contract_name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "royalty": {
                            "type": "number"
                          },
                          "contract_address": {
                            "type": "string"
                          },
                          "owner_address": {
                            "type": "string"
                          },
                          "network": {
                            "type": "number",
                            "enum": [
                              1,
                              3,
                              4,
                              5,
                              137,
                              80001
                            ]
                          },
                          "chain": {
                            "type": "string",
                            "enum": [
                              "eth",
                              "imx"
                            ]
                          },
                          "app_id": {
                            "type": "string"
                          },
                          "api_key": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "Draft",
                              "Disabled",
                              "Failed",
                              "Published",
                              "Suspended",
                              "Deploying"
                            ]
                          },
                          "project_id": {
                            "type": "string"
                          },
                          "used_quantity": {
                            "type": "number"
                          },
                          "organization_id": {
                            "type": "string"
                          },
                          "pk": {
                            "type": "string"
                          },
                          "sk": {
                            "type": "string"
                          },
                          "api_key_pk": {
                            "type": "string"
                          },
                          "api_key_sk": {
                            "type": "string"
                          },
                          "contract_address_pk": {
                            "type": "string"
                          },
                          "contract_address_sk": {
                            "type": "string"
                          },
                          "domain_pk": {
                            "type": "string"
                          },
                          "domain_sk": {
                            "type": "string"
                          },
                          "organization_pk": {
                            "type": "string"
                          },
                          "organization_sk": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "api_key",
                          "api_key_pk",
                          "api_key_sk",
                          "chain",
                          "contract_address_pk",
                          "contract_address_sk",
                          "contract_name",
                          "contract_type",
                          "created_at",
                          "description",
                          "domain",
                          "domain_pk",
                          "domain_sk",
                          "name",
                          "network",
                          "organization_id",
                          "organization_pk",
                          "organization_sk",
                          "pk",
                          "project_id",
                          "sk",
                          "status",
                          "updated_at",
                          "wallet_type"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "last_evaluated_key": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "projects-create",
        "summary": "Create",
        "description": "Creates a new project in the system with the specified details.",
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "mint_limit_per_address": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "contract_type": {
                    "type": "string",
                    "enum": [
                      "Shared",
                      "Dedicated",
                      "Existing"
                    ]
                  },
                  "wallet_type": {
                    "type": "string",
                    "enum": [
                      "Both",
                      "Custodial",
                      "NonCustodial"
                    ]
                  },
                  "base_uri": {
                    "type": "string"
                  },
                  "contract_name": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "royalty": {
                    "type": "number"
                  },
                  "contract_address": {
                    "type": "string"
                  },
                  "owner_address": {
                    "type": "string"
                  },
                  "chain": {
                    "type": "string",
                    "enum": [
                      "eth",
                      "imx"
                    ]
                  }
                },
                "required": [
                  "description",
                  "name",
                  "contract_type",
                  "wallet_type",
                  "contract_name",
                  "chain"
                ]
              }
            }
          },
          "description": "Create project values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "The project was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "domain": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "mint_limit_per_address": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "contract_type": {
                          "type": "string",
                          "enum": [
                            "Shared",
                            "Dedicated",
                            "Existing"
                          ]
                        },
                        "wallet_type": {
                          "type": "string",
                          "enum": [
                            "Both",
                            "Custodial",
                            "NonCustodial"
                          ]
                        },
                        "base_uri": {
                          "type": "string"
                        },
                        "contract_name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "royalty": {
                          "type": "number"
                        },
                        "contract_address": {
                          "type": "string"
                        },
                        "owner_address": {
                          "type": "string"
                        },
                        "network": {
                          "type": "number",
                          "enum": [
                            1,
                            3,
                            4,
                            5,
                            137,
                            80001
                          ]
                        },
                        "chain": {
                          "type": "string",
                          "enum": [
                            "eth",
                            "imx"
                          ]
                        },
                        "app_id": {
                          "type": "string"
                        },
                        "api_key": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "Draft",
                            "Disabled",
                            "Failed",
                            "Published",
                            "Suspended",
                            "Deploying"
                          ]
                        },
                        "project_id": {
                          "type": "string"
                        },
                        "used_quantity": {
                          "type": "number"
                        },
                        "organization_id": {
                          "type": "string"
                        },
                        "pk": {
                          "type": "string"
                        },
                        "sk": {
                          "type": "string"
                        },
                        "api_key_pk": {
                          "type": "string"
                        },
                        "api_key_sk": {
                          "type": "string"
                        },
                        "contract_address_pk": {
                          "type": "string"
                        },
                        "contract_address_sk": {
                          "type": "string"
                        },
                        "domain_pk": {
                          "type": "string"
                        },
                        "domain_sk": {
                          "type": "string"
                        },
                        "organization_pk": {
                          "type": "string"
                        },
                        "organization_sk": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "api_key",
                        "api_key_pk",
                        "api_key_sk",
                        "chain",
                        "contract_address_pk",
                        "contract_address_sk",
                        "contract_name",
                        "contract_type",
                        "created_at",
                        "description",
                        "domain",
                        "domain_pk",
                        "domain_sk",
                        "name",
                        "network",
                        "organization_id",
                        "organization_pk",
                        "organization_sk",
                        "pk",
                        "project_id",
                        "sk",
                        "status",
                        "updated_at",
                        "wallet_type"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "get": {
        "operationId": "projects-show",
        "summary": "Retrieve",
        "description": "Returns the project with the specified ID.",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the project with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "domain": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "mint_limit_per_address": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "contract_type": {
                          "type": "string",
                          "enum": [
                            "Shared",
                            "Dedicated",
                            "Existing"
                          ]
                        },
                        "wallet_type": {
                          "type": "string",
                          "enum": [
                            "Both",
                            "Custodial",
                            "NonCustodial"
                          ]
                        },
                        "base_uri": {
                          "type": "string"
                        },
                        "contract_name": {
                          "type": "string"
                        },
                        "symbol": {
                          "type": "string"
                        },
                        "royalty": {
                          "type": "number"
                        },
                        "contract_address": {
                          "type": "string"
                        },
                        "owner_address": {
                          "type": "string"
                        },
                        "network": {
                          "type": "number",
                          "enum": [
                            1,
                            3,
                            4,
                            5,
                            137,
                            80001
                          ]
                        },
                        "chain": {
                          "type": "string",
                          "enum": [
                            "eth",
                            "imx"
                          ]
                        },
                        "app_id": {
                          "type": "string"
                        },
                        "api_key": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "Draft",
                            "Disabled",
                            "Failed",
                            "Published",
                            "Suspended",
                            "Deploying"
                          ]
                        },
                        "project_id": {
                          "type": "string"
                        },
                        "used_quantity": {
                          "type": "number"
                        },
                        "organization_id": {
                          "type": "string"
                        },
                        "pk": {
                          "type": "string"
                        },
                        "sk": {
                          "type": "string"
                        },
                        "api_key_pk": {
                          "type": "string"
                        },
                        "api_key_sk": {
                          "type": "string"
                        },
                        "contract_address_pk": {
                          "type": "string"
                        },
                        "contract_address_sk": {
                          "type": "string"
                        },
                        "domain_pk": {
                          "type": "string"
                        },
                        "domain_sk": {
                          "type": "string"
                        },
                        "organization_pk": {
                          "type": "string"
                        },
                        "organization_sk": {
                          "type": "string"
                        },
                        "claim": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            },
                            "use_code": {
                              "type": "boolean"
                            },
                            "encrypted": {
                              "type": "boolean"
                            },
                            "button_size": {
                              "type": "string"
                            },
                            "button_name": {
                              "type": "string"
                            },
                            "email_entry": {
                              "type": "string"
                            },
                            "button_color": {
                              "type": "string"
                            },
                            "button_shadow": {
                              "type": "string"
                            },
                            "border_radius": {
                              "type": "string"
                            },
                            "background_color": {
                              "type": "string"
                            },
                            "terms_conditions": {
                              "type": "string"
                            },
                            "project_id": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            },
                            "pk": {
                              "type": "string"
                            },
                            "sk": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "created_at",
                            "enabled",
                            "pk",
                            "project_id",
                            "sk",
                            "updated_at"
                          ],
                          "additionalProperties": false
                        },
                        "generative": {
                          "type": "object",
                          "properties": {
                            "project_id": {
                              "type": "string"
                            },
                            "total_images": {
                              "type": "number"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "Draft",
                                "Generated",
                                "Generating"
                              ]
                            },
                            "layers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "frequency": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "percentage": {
                                    "type": "number"
                                  },
                                  "images": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "percentage": {
                                          "type": "number"
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "x": {
                                          "type": "number"
                                        },
                                        "y": {
                                          "type": "number"
                                        },
                                        "frequency": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "frequency",
                                        "name",
                                        "percentage",
                                        "url"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "required": [
                                  "frequency",
                                  "name",
                                  "percentage",
                                  "images"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "pk": {
                              "type": "string"
                            },
                            "sk": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "layers",
                            "pk",
                            "project_id",
                            "sk",
                            "status",
                            "total_images"
                          ],
                          "additionalProperties": false
                        },
                        "marketplace": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "icon": {
                              "type": "string"
                            },
                            "cover": {
                              "type": "string"
                            },
                            "royalty": {
                              "type": "number"
                            },
                            "category": {
                              "type": "string"
                            },
                            "sub_category": {
                              "type": "string"
                            },
                            "external_url": {
                              "type": "string"
                            },
                            "reddit_url": {
                              "type": "string"
                            },
                            "youtube_url": {
                              "type": "string"
                            },
                            "twitter_url": {
                              "type": "string"
                            },
                            "instagram_url": {
                              "type": "string"
                            },
                            "contract_address": {
                              "type": "string"
                            },
                            "project_id": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            },
                            "pk": {
                              "type": "string"
                            },
                            "sk": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "contract_address",
                            "created_at",
                            "name",
                            "pk",
                            "project_id",
                            "sk",
                            "updated_at"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "api_key",
                        "api_key_pk",
                        "api_key_sk",
                        "chain",
                        "contract_address_pk",
                        "contract_address_sk",
                        "contract_name",
                        "contract_type",
                        "created_at",
                        "description",
                        "domain",
                        "domain_pk",
                        "domain_sk",
                        "name",
                        "network",
                        "organization_id",
                        "organization_pk",
                        "organization_sk",
                        "pk",
                        "project_id",
                        "sk",
                        "status",
                        "updated_at",
                        "wallet_type"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "projects-update",
        "summary": "Update",
        "description": "Updates the project with the specified ID with the specified details.",
        "tags": [
          "Projects"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "mint_limit_per_address": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "contract_type": {
                    "type": "string",
                    "enum": [
                      "Shared",
                      "Dedicated",
                      "Existing"
                    ]
                  },
                  "wallet_type": {
                    "type": "string",
                    "enum": [
                      "Both",
                      "Custodial",
                      "NonCustodial"
                    ]
                  },
                  "base_uri": {
                    "type": "string"
                  },
                  "contract_name": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "royalty": {
                    "type": "number"
                  },
                  "contract_address": {
                    "type": "string"
                  },
                  "owner_address": {
                    "type": "string"
                  },
                  "network": {
                    "type": "number",
                    "enum": [
                      1,
                      3,
                      4,
                      5,
                      137,
                      80001
                    ]
                  },
                  "chain": {
                    "type": "string",
                    "enum": [
                      "eth",
                      "imx"
                    ]
                  }
                },
                "required": [
                  "domain",
                  "description",
                  "name",
                  "contract_type",
                  "wallet_type",
                  "contract_name",
                  "network",
                  "chain"
                ]
              }
            }
          },
          "description": "Update project values"
        },
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "projects-remove",
        "summary": "Remove",
        "description": "Removing a project from a system or platform.",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed project details",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/deploy": {
      "post": {
        "operationId": "projects-deploy",
        "summary": "Deploy",
        "description": "Deploy the project with the specified ID with the specified details.",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "APIKey": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "This identifies a project in your account, it is not confidential.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The project was successfully started to deploy",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {},
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.mintology.app",
      "description": "Production server (Uses live data)"
    },
    {
      "url": "https://api.canary.mintology.app",
      "description": "Staging server"
    },
    {
      "url": "https://api.mintology.dev",
      "description": "Dev server"
    }
  ]
}